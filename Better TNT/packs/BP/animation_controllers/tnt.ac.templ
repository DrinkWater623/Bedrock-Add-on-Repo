{	//Template just to get rid of comment s for a release build
	"$template":
	{
		/*
			Fuse is already set

			This determines if falling, and after some time, it will explode upon impact instead
			should be before fuse.  Will need to test long distance to make sure fuse is long enough
			for 128 blocks 64 to -64
		*/
		
		"format_version": "1.10.0",
		"animation_controllers": {
			"controller.animation.tnt.spawned": {
				"initial_state": "spawned",
				"states": {
					"spawned": {
						"transitions": [{"ignited":"return q.property('bit:ignited') == 1;"}]
					},
					"ignited": {
						"on_entry": ["v.foo = q.life_time;"],					
						"transitions": [
							{"fuse_lit"	 : "return !q.is_moving;"},
							{"is_moving" : "return  q.is_moving;"}
						]
					},			
					"is_moving": {																
						"transitions": [						
							{"is_on_ground" : "return q.is_on_ground;"}
						]
					},
					"is_on_ground": {															
						"transitions": [
							{"fuse_lit"	: "return (q.life_time - v.foo) <= 0.49;"},
							{"impact"	: "return (q.life_time - v.foo) >= 0.50;"}
						]
					},
					//remember fuse is already lit, so just see if moving again as it seems to catch on this one while falling
					"fuse_lit": {						
						"transitions": [{"is_moving"	:"return q.is_moving;"}]					
					},
					"impact": {						
						"on_entry": [
							"/tell @a[tag=Debug_Better_TNT] AC Impact",
							"@s ev:explode_from_impact"
						],
						"transitions": []
					}
				}
			}
			/*  WORKS,
			"controller.animation.tnt.in_block_tag": {
				"initial_state": "default",
				"states": {
					"default": {
						"transitions": [{"can_read":"return q.relative_block_has_any_tag(0, 0, 0, 'tnt');"}]
					},
					"can_read": {
						"on_entry": ["/say I read the tnt tag"],					
						"transitions": []
					}
				}
			}
			*/
		}
	}
}