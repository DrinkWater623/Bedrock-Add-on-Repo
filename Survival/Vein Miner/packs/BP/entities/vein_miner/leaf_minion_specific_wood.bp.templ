{
	/*
		Can Assume Log and Leaf because it only puts one in it's own kind or the related blocks.
		in-block test for log/log2 leaves/leaves2 is not reliable... 
		works for Oak
		not for Birch
	*/
	//"$extend":["wood_type_radius_array"],
	"$scope":{
		"{{#0..32}}":{
            "local_wood_type_radius":[
                // Paste Wood Types Array here and add "radius_ptr":"{{=value}}"  , in front of each line
                {"radius_ptr":"{{=value}}"  ,"lid":1	,"log_group":2	,"canopy_size":7	,"wood_name":"acacia"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":null	,"leaf2_id":0		,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":2	,"log_group":1	,"canopy_size":3	,"wood_name":"birch"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":2	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":3	,"log_group":3	,"canopy_size":7	,"wood_name":"cherry"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":1	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":4	,"log_group":2	,"canopy_size":4	,"wood_name":"dark_oak"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":null	,"leaf2_id":1		,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":5	,"log_group":1	,"canopy_size":7	,"wood_name":"jungle"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":3	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":6	,"log_group":3	,"canopy_size":7	,"wood_name":"mangrove"	,"log_sfx":"log"	,"sapling_sfx":"propagule"	,"leaf_sfx":"leaves"	,"give_leaf":1	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":7	,"log_group":1	,"canopy_size":5	,"wood_name":"oak"		,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":0	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":8	,"log_group":1	,"canopy_size":4	,"wood_name":"spruce"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":1	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":9	,"log_group":3	,"canopy_size":7	,"wood_name":"crimson"	,"log_sfx":"stem"	,"sapling_sfx":null			,"leaf_sfx": null		,"give_leaf":0	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":"nether_wart_block"},
                {"radius_ptr":"{{=value}}"  ,"lid":10	,"log_group":3	,"canopy_size":7	,"wood_name":"warped"	,"log_sfx":"stem"	,"sapling_sfx":null			,"leaf_sfx":"wart_block","give_leaf":1	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":null}        
            ]
        },
		"related_loot":"{{other_tree_block_loot.filter(x => x.is_vine == 0 && (x.related_wood_1 > '' || x.related_wood_2 > ''))}}",
		"local_vine_list":"{{other_tree_block_loot.filter(x => x.is_vine == 1)}}"
	},
	"$files":{    
		"array": "local_wood_type_radius",
		"fileName": "./leaves/{{wood_name}}/leaf_minion_{{wood_name}}_{{radius_ptr}}.bp"
	},
    "$template":{
		"format_version": "1.20.10",
		"minecraft:entity":{
			"description":{
				"identifier": "dw623:leaf_minion_{{wood_name}}_{{radius_ptr}}",
				"is_spawnable": false,
				"is_summonable": true,
				"is_experimental": false,
				"properties":{
					"bit:has_silk_touch":{"type": "bool","default": false},					
					"bit:in_leaf":{"type": "bool","default": false},
					"bit:in_related":{"type": "bool","default": false}					
				}
			},
			"component_groups":{
				"cg:despawn":{"minecraft:instant_despawn":{}},

				"cg:delay_timer_step_2_minion":{
					"minecraft:timer":{
						"time":0.05,"looping": false,"randomInterval": false,
						"time_down_event":{"event":"ev:step_2_minion_process"}
					}
				},
				//This timer has to be same or less than above one
				"cg:delay_timer_step_3_summon":{
					"minecraft:timer":{
						"time": [0.05,0.25],"looping": false,"randomInterval": true,
						"time_down_event":{"event":"ev:step_3_summon_to_neighbors"}
					}
				},
				"cg:despawn_guarantee":{
					"minecraft:timer":{
						"time": 0.1,"looping": false,"randomInterval": false,
						"time_down_event":{"event":"ev:despawn"}
					}
				}
			},
			"components":{
				"minecraft:breathable":{
					"breathes_air": true,
					"breathes_lava": true,
					"breathes_solids": true,
					"breathes_water": true,
					"generates_bubbles": false,
					"inhale_time": 1.0,
					"suffocate_time": 100,
					"total_supply": 100
				},
				"minecraft:collision_box":{"height":0.125,"width":0.125},
				"minecraft:damage_sensor":{"triggers":{"cause":"all","deals_damage":false}},
				"minecraft:despawn":{
					"filters":[
						{
							"any_of":[
								{"test":"distance_to_nearest_player","operator":">","value":32},
								{"test": "in_block","value": "minecraft:air"},
								{"test": "in_block","value": "minecraft:log"},
								{"test": "in_block","value": "minecraft:log2"},
								{"test": "in_block","value": "minecraft:dirt"}
								
							]
						}
					]
				},
				"minecraft:physics":{"has_gravity": false,"has_collision": false},
				"minecraft:scale":{"value":0.25},
				"minecraft:health":{"value":100,"max":100},
				"minecraft:type_family":{"family":["leaf_minion"]},
				// Just in case called wrong and nothing happens
				"minecraft:timer":{
					"time":5,"looping": false,"randomInterval": true,
					"time_down_event":{"event":"ev:despawn"}
				}
			},
			"events":{
				"ev:despawn":{"add":{"component_groups":["cg:despawn"]}},
				/*=================================*/
				// Step ONE - called by the summons
				/*=================================*/
				//summon with this event to activate silk touch and looting of vines/leaves
				"ev:efficiency_activate_leaf":{
					"sequence":[
						{
							"run_command":{"command":["tell @p[r=5,tag=debug_max] Efficiency Activated - {{wood_name}} leaf - r{{radius_ptr}}"]},
							"set_property":{"bit:in_leaf": true}
						},
						{"add":{"component_groups":["cg:delay_timer_step_2_minion"]}}
					]
				},
				"ev:efficiency_activate_related":{
					"sequence":[
						{
							"run_command":{"command":["tell @p[r=5,tag=debug_max] Efficiency Activated - Related - r{{radius_ptr}}"]},
							"set_property":{"bit:in_related": true}
						},
						{"add":{"component_groups":["cg:delay_timer_step_2_minion"]}}
					]
				},
				"ev:silk_touch_activate_leaf":{
					"sequence":[
						{
							"run_command":{"command":["tell @p[r=5,tag=debug_max] Silk Touch Activated - {{wood_name}} leaf - r{{radius_ptr}}"]},
							"set_property":{"bit:has_silk_touch": true,"bit:in_leaf": true}
						},
						{"trigger": "ev:step_1b_loot_adjacent_vines"},
						{
							"run_command":{"command":[
								"tell @p[r=5,tag=debug_max] Looting Leaf",
								"loot spawn ~ ~ ~ loot \"{{settings.addon}}/tree_loot/{{wood_name}}_leaf_loot\"",
								"setblock ~ ~ ~ dead_brain_coral"
								//"setblock ~ ~ ~ brown_glazed_terracotta"
								//"setblock ~ ~ ~ light_gray_wool"
								//"setblock ~ ~ ~ minecraft:hard_stained_glass_pane [\"color\" = \"silver\"]"
							]}
						},
						{"add":{"component_groups":["cg:delay_timer_step_2_minion"]}}
					]
				},				
				"ev:silk_touch_activate_related":{
					"sequence":[
						{
							"run_command":{"command":["tell @p[r=5,tag=debug_max] Silk Touch Activated - Related - r{{radius_ptr}}"]},
							"set_property":{"bit:has_silk_touch": true,"bit:in_related": true}
						},
						{"trigger": "ev:step_1b_loot_adjacent_vines"},
						{"add":{"component_groups":["cg:delay_timer_step_2_minion"]}}
					]
				},
				"ev:step_1b_loot_adjacent_vines":{
					// Note: This is only called when silk touch is on
					"sequence":[
						{"run_command":{"command":["tell @p[r=5,tag=debug_max] Looting Adjacent Vines"]}},
						{
							"{{#local_vine_list}}":{
								"run_command":{"command":[
									{
										"{{#squiggly_pos.filter(x => x.pos != 2)}}":
											"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:vine_minion {{one}}"
									}
								]}
							}
						}
					]
				},		
				/*======================================================*/
				// Step TWO - called by the delay timer set by the above
				/*======================================================*/										
				"ev:step_2_minion_process":{
					"sequence":[
						// DEBUG
						{"run_command":{"command":["tell @p[r=5,tag=debug_max] @ step_2_minion_process"]}},
						// START
						{
							"filters":{
								"none_of":[									
									{"test":"bool_property","domain":"bit:in_leaf", "value":true},
									{"test":"bool_property","domain":"bit:in_related", "value":true}
								]
							},
							//"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_despawn_not_tree"]},
							"run_command":{"command":["tell @p[r=5,tag=debug_max] Not {{wood_name}} related"]},
							"trigger":"ev:despawn"
						},
						{
							"filters":{
								"any_of":[									
									{"test":"bool_property","domain":"bit:in_leaf", "value":true},
									{"test":"bool_property","domain":"bit:in_related", "value":true}
								]
							},
							"run_command":{"command":["tell @p[r=5,tag=debug_max] Delay Set for Summoning to Neighbors"]},							
							"add":{"component_groups":["cg:delay_timer_step_3_summon"]}
						}
					]
				},					
				// Called by Delay Timer
				"ev:step_3_summon_to_neighbors":{
					"sequence":[
						{"run_command":{"command":["tell @p[r=5,tag=debug_max] step_3_summon_to_neighbors"]}},
						{"add":{"component_groups":["cg:despawn_guarantee"]}},
						{"trigger":"ev:step_4_debug"},
						// Vertical, Either Leaves or Logs - Y
						{"trigger":"ev:step_4a_summon_vertical"},						
						// Radius One Plus
						{"{{?value.radius_ptr > 0}}":{"trigger":"ev:step_4c_summon_horizontal_radius_one_plus"}},
						/*
								Done
						*/
						{							
							"trigger": "ev:step_z_destroy_block_and_despawn"
						}
					]
				},
				"$ev:step_4_debug":{ //Who is Around Me
					"sequence":[
						{"run_command":{"command":["tell @p[r=5,tag=debug_max] step_4a_debug - {{wood_name}} - r{{radius_ptr}}"]}},
						{	
							"{{#squiggly_pos}}"	:{								
								"run_command":{"command":[
									// Debug										
									{"{{?leaf_id >= 0}}":{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":"execute if block {{p75}} minecraft:leaves [\"old_leaf_type\" = \"{{wood_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run tell @p[tag=debug_max] §aFound {{wood_name}} Leaf-1 @ {{one}}"}}},										
									{"{{?leaf2_id >= 0}}":{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":"execute if block {{p75}} minecraft:leaves2 [\"new_leaf_type\" = \"{{wood_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run tell @p[tag=debug_max] §aFound {{wood_name}} Leaf-2 @ {{one}}"}}},										
									{"{{?give_leaf == 1}}"    :"execute if block {{p75}} minecraft:{{wood_name + '_' + leaf_sfx}} run tell @p[tag=debug_max] §aFound Leaf-3 @ {{one}}"},
									{"{{?alt_give_leaf > ''}}":"execute if block {{p75}} minecraft:{alt_give_leaf}} run tell @p[tag=debug_max] §aFound {{wood_name}} Leaf-3 @ {{one}}"},
									"execute if block {{p75}} minecraft:{{wood_name}}_{{log_sfx}} run tell @p[tag=debug_max] §eFound {{wood_name}} Log @ {{one}}",
									"execute if block {{p75}} minecraft:stripped_{{wood_name}}_{{log_sfx}} run tell @p[tag=debug_max] §eFound Stripped {{wood_name}} Log @ {{one}}"
									
								]}
							}							
						}
					]
				},
				"$ev:step_4a_summon_vertical":{
					"sequence":[
						//Vertical, Either Leaves or Logs - Y
						{"run_command":{"command":["tell @p[r=5,tag=debug_max] step_4a_summon_vertical"]}},
						{	
							"{{#event_silk_touch}}":{
								"{{#squiggly_pos.filter(x => x.pos == 2)}}"	:{
									"filters":{"test":"bool_property","domain":"bit:has_silk_touch", "value":"{{if}}"},
									"run_command":{"command":[										
										// Leaves										
										{"{{?leaf_id >= 0}}" :{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":"execute if block {{p75}} minecraft:leaves [\"old_leaf_type\" = \"{{wood_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_leaf"}}},
										{"{{?leaf2_id >= 0}}":{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":"execute if block {{p75}} minecraft:leaves2 [\"new_leaf_type\" = \"{{wood_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_leaf"}}},
										{"{{?give_leaf == 1}}"    :"execute if block {{p75}} minecraft:{{wood_name}}_{{leaf_sfx}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_leaf"},
										{"{{?alt_give_leaf > ''}}":"execute if block {{p75}} minecraft:{{alt_give_leaf}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_leaf"},
										// Related
										{
											"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":
												"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_related"
										}
									]}
								}
							}
						}			
					]
				},
				"{{?value.radius_ptr == 0}}":{
					"$ev:step_4b_summon_log_radius_zero":{
						"sequence":[
							{"run_command":{"command":["tell @p[r=5,tag=debug_max] step_4b_summon_log_radius_zero"]}},					
							{	
								"{{#event_silk_touch}}":{
									"{{#squiggly_pos.filter(x => x.pos != 2)}}":{
										"filters":{"test":"bool_property","domain":"bit:has_silk_touch", "value":"{{if}}"},
										"run_command":{"command":[
											// Logs
											"execute if block {{p75}} minecraft:{{wood_name}}_{{log_sfx}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_log",
											"execute if block {{p75}} minecraft:stripped_{{wood_name}}_{{log_sfx}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_log",
											// Related
											{
												"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":
													"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr}} {{one}} {{event_name}}_related"
											}
										]}
									}
								}
							}				
						]
					}
				},
				"{{?value.radius_ptr > 0}}":{
					"$ev:step_4c_summon_horizontal_radius_one_plus":{ // X/Z
						"sequence":[
							{"run_command":{"command":["tell @p[r=5,tag=debug_max] step_4c_summon_horizontal_radius_one_plus"]}},
							
							// Leaves
							{	
								"{{#event_silk_touch}}":{
									"{{#squiggly_pos.filter(x => x.pos != 2)}}":{
										"filters":{"test":"bool_property","domain":"bit:has_silk_touch", "value":"{{if}}"},
										"run_command":{"command":[
											// Leaves
											{"{{?leaf_id >= 0}}" :{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":{"{{#global_log1}}":"execute if block {{p75}} minecraft:leaves  [\"old_leaf_type\" = \"{{wood_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr-1}} {{one}} {{event_name}}_leaf"}}}},
											{"{{?leaf2_id >= 0}}":{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":{"{{#global_log2}}":"execute if block {{p75}} minecraft:leaves2 [\"new_leaf_type\" = \"{{log2_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr-1}} {{one}} {{event_name}}_leaf"}}}},
											{"{{?give_leaf == 1}}"	:"execute if block {{p75}} minecraft:{{wood_name}}_{{leaf_sfx}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr-1}} {{one}} {{event_name}}_leaf"},
											{"{{?alt_give_leaf > ''}}":"execute if block {{p75}} minecraft:{{alt_give_leaf}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr-1}} {{one}} {{event_name}}_leaf"}
										]}
									}
								}
							},
							// Related
							{	
								"{{#event_silk_touch}}":{
									"{{#squiggly_pos.filter(x => x.pos != 2)}}":{
										"filters":{"test":"bool_property","domain":"bit:has_silk_touch", "value":"{{if}}"},
										"run_command":{"command":[											
											// Related
											{
												"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":
													"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:leaf_minion_{{wood_name}}_{{radius_ptr-1}} {{one}} {{event_name}}_related"
											}
										]}
									}
								}
							}				
						]
					}
				},
				"ev:step_z_destroy_block_and_despawn":{
					"sequence":[
						{
							"run_command":{"command":[
								// 1) if no tree chest, spawn one in
								"execute unless entity @e[r=48,family=tree_chest,family=hungry] run summon dw623:tree_loot_chest ~ ~ ~ 0 0 ev:entity_spawned Tree-Loot",								
								"tell @p[r=5,tag=debug_max] §cAll Done - {{wood_name}} - r{{radius_ptr}}"
							]}
						},						
						{
							"filters":{"test":"bool_property","domain":"bit:in_leaf","value":true},
							"run_command":{"command":["fill ~ ~ ~  ~ ~ ~ air"]}
						},
						// should despawn once in air - this is just in case
						// later test if this is needed at all - get rid of if not
						// This makes a LAG difference, leave on
						{"add":{"component_groups":["cg:despawn"]}}
					]
				}
			}
		}
	}
}
