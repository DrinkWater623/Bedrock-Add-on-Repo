{
	/*
		Note: This must be placed by a master who will know what type of tree this is.
		Preferably it will call based on Canopy Size
		
	*/
	"$scope":{	
		"related_loot":"{{other_tree_block_loot.filter(x => x.is_vine == 0 && (x.related_wood_1 > '' || x.related_wood_2 > ''))}}",
		"local_vine_list":"{{other_tree_block_loot.filter(x => x.is_vine == 1)}}",
        "{{#0..16}}":{
			//run test to see if can add radius_ptr like below to main list, then use in here 
			//if works will have array in ONE place
            "local_log_level_combo":[
                // Paste Wood Types Array here and add "radius_ptr":"{{=value}}"  , in front of each line
                {"radius_ptr":"{{=value}}"  ,"lid":1	,"log_group":2	,"canopy_size":7	,"wood_name":"acacia"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":null	,"leaf2_id":0		,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":2	,"log_group":1	,"canopy_size":3	,"wood_name":"birch"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":2	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":3	,"log_group":3	,"canopy_size":7	,"wood_name":"cherry"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":1	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":4	,"log_group":2	,"canopy_size":4	,"wood_name":"dark_oak"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":null	,"leaf2_id":1		,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":5	,"log_group":1	,"canopy_size":7	,"wood_name":"jungle"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":3	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":6	,"log_group":3	,"canopy_size":7	,"wood_name":"mangrove"	,"log_sfx":"log"	,"sapling_sfx":"propagule"	,"leaf_sfx":"leaves"	,"give_leaf":1	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":7	,"log_group":1	,"canopy_size":5	,"wood_name":"oak"		,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":0	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":8	,"log_group":1	,"canopy_size":4	,"wood_name":"spruce"	,"log_sfx":"log"	,"sapling_sfx":"Sapling"	,"leaf_sfx":"leaves"	,"give_leaf":0	,"leaf_id":1	,"leaf2_id":null	,"alt_give_leaf":null},
                {"radius_ptr":"{{=value}}"  ,"lid":9	,"log_group":3	,"canopy_size":8	,"wood_name":"crimson"	,"log_sfx":"stem"	,"sapling_sfx":null			,"leaf_sfx": null		,"give_leaf":0	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":"nether_wart_block"},
                {"radius_ptr":"{{=value}}"  ,"lid":10	,"log_group":3	,"canopy_size":8	,"wood_name":"warped"	,"log_sfx":"stem"	,"sapling_sfx":null			,"leaf_sfx":"wart_block","give_leaf":1	,"leaf_id":null	,"leaf2_id":null	,"alt_give_leaf":null}        
            ]
        }
	},
	"$files":{    
		"array": "local_log_level_combo",
		"fileName": "tree_minion_{{wood_name}}_{{radius_ptr}}.bp"
	},
    "$template":{
		"format_version": "1.20.10",
		"minecraft:entity":{
			"description":{
				"identifier": "dw623:tree_minion_{{wood_name}}_{{radius_ptr}}",
				"is_spawnable": false,
				"is_summonable": true,
				"is_experimental": false,
				"properties":{
					"bit:has_silk_touch":{"type": "bool","default": false},
					"bit:in_log":{"type": "bool","default": false},
					"bit:in_leaf":{"type": "bool","default": false},
					"int:my_radius":{"type": "int","default": "{{=radius_ptr}}","range":[0,"{{=radius_ptr+1}}"]}
				}
			},
			"component_groups":{
				"cg:despawn":{"minecraft:instant_despawn":{}},
				//CONFIRM timer is enough
				"cg:delay_timer_summon":{
					"minecraft:timer":{
						"time": 0.1,"looping": false,"randomInterval": false,
						"time_down_event":{"event":"ev:step_5_summon_to_neighbors"}
					}
				}
			},
			"components":{
				"minecraft:breathable":{
					"breathes_air": true,
					"breathes_lava": true,
					"breathes_solids": true,
					"breathes_water": true,
					"generates_bubbles": false,
					"inhale_time": 1.0,
					"suffocate_time": 100,
					"total_supply": 100
				},
				"minecraft:collision_box":{"height":0.125,"width":0.125},
				"minecraft:damage_sensor":{"triggers":{"cause":"all","deals_damage":false}},
				"minecraft:despawn":{
					"filters":[
						{
							"any_of":[
								{"test":"distance_to_nearest_player","operator":">","value":32},
								{"test": "in_block","value": "minecraft:air"},
								{"test": "in_block","value": "minecraft:dirt"},
								{"test": "in_block","value": "minecraft:water"}
							]
						}
					]
				},
				"minecraft:physics":{"has_gravity": false,"has_collision": false},
				"minecraft:scale":{"value":0.25},
				"minecraft:health":{"value":100,"max":100},
				"minecraft:type_family":{"family":["tree_minion"]},
				// Delay is so that environmental information can be processed prior to queries
				"minecraft:timer":{
					"time":[0.25, 0.5],"looping": false,"randomInterval": true,
					"time_down_event":{"event":"ev:step_2_minion_process"}
				}
			},
			"events":{
				"ev:despawn":{
					// DEBUG
					//"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_despawn"]},
					// Done
					"add":{"component_groups":["cg:despawn"]}
				},
				//summon with this event to activate silk touch and looting of vines/leaves
				"ev:silk_touch_activate":{
					"set_property":{"bit:has_silk_touch": true},
					"trigger":"minecraft:entity_spawned"
				},
				// Step ZERO
				"minecraft:entity_spawned":{
					"sequence":[
						// DEBUG
						//{"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_entity_spawned_specific"]}},
						// START
						{"run_command":{"command":["execute align xyz run tp @s ~0.5 ~0.5 ~0.5"]}},
						{"trigger":"ev:step_1_environmental_sensor"}
					]
				},
				// Step ONE
				"$ev:step_1_environmental_sensor":{
					"sequence":[
						// DEBUG
						//{"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_environmental_sensor"]}},
						// LOGS
						{
							"filters":{
								"any_of":[
									{"test": "in_block","value": "minecraft:{{wood_name}}_{{log_sfx}}"},
									{"test": "in_block","value": "minecraft:stripped_{{wood_name}}_{{log_sfx}}"}
								]
							},							
							"set_property":{"bit:in_log": true}
						},
						// LEAVES
						{
							"filters":{"test":"in_block","value":"minecraft:{{leaf_id >= 0 ? 'leaves' : leaf2_id >= 0 ? 'leaves2' : give_leaf == 1 ? wood_name + '_'+leaf_sfx : 'air'}}"},
							//"set_property":{"bit:in_leaf": true}
							"trigger":"ev:step_1b_confirm_leaf"
						},
						{
							"filters":{
								"any_of":[									
									{
										"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":{
											"test": "in_block","value": "minecraft:{{block_name}}"
										}
									}
								]
							},
							"set_property":{"bit:in_leaf": true}
						}
					]
				},
				"$ev:step_1b_confirm_leaf":{
					"sequence":[
						{
							"filters":{
								"none_of":[
									{"test":"in_block","value":"minecraft:leaves"},
									{"test":"in_block","value":"minecraft:leaves2"}
								]
							},
							"set_property":{"bit:in_leaf": true}
						},
						{
							"filters":{"test":"in_block","value":"minecraft:leaves"},
							"trigger":"ev:step_1c_confirm_leaf_group_1"
						},
						{
							"filters":{"test":"in_block","value":"minecraft:leaves2"},
							"trigger":"ev:step_1c_confirm_leaf_group_2"
						}
					]
				},
				"$ev:step_1c_confirm_leaf_group_1":{
					// Note: This is only called when silk touch is on
					"sequence":[
						{
							"{{#global_log1}}":{
								"run_command":{"command":[
									"setblock ~ {{320-leaf_id}} ~ leaves [\"old_leaf_type\" = \"{{wood_name}}\"]",
									"execute if blocks ~ ~ ~  ~ ~ ~  ~ {{320-leaf_id}} ~ run event entity @s ev:step_1e_leaf_confirmed",
									"execute unless block ~ {{320-leaf_id}} ~ air execute setblock ~ {{320-leaf_id}} ~ air"
								]}
							}
						}
					]
				},
				"$ev:step_1d_confirm_leaf_group_2":{
					// Note: This is only called when silk touch is on
					"sequence":[
						{
							"{{#global_log1}}":{
								"run_command":{"command":[
									"setblock ~ {{320-leaf2_id}} ~ leaves [\"new_leaf_type\" = \"{{wood_name}}\"]",
									"execute if blocks ~ ~ ~  ~ ~ ~  ~ {{320-leaf2_id}} ~ run event entity @s ev:step_1e_leaf_confirmed",
									"execute unless block ~ {{320-leaf2_id}} ~ air execute setblock ~ {{320-leaf2_id}} ~ air"
								]}
							}
						}
					]
				},
				"ev:step_1e_leaf_confirmed":{"set_property":{"bit:in_leaf":true}},
				// Step TWO
				"ev:step_2_minion_process":{
					"sequence":[
						// DEBUG
						//{"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_minion_process"]}},
						// START
						{
							"filters":{
								"none_of":[
									{"test":"bool_property","domain":"bit:in_log", "value":true},
									{"test":"bool_property","domain":"bit:in_leaf", "value":true}
								]
							},
							"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_despawn_not_tree"]},
							"trigger":"ev:despawn"
						},
						{
							"filters":{
								"any_of":[
									{"test":"bool_property","domain":"bit:in_log", "value":true},
									{"test":"bool_property","domain":"bit:in_leaf", "value":true}
								]
							},
							"trigger": "ev:step_3_summon_and_loot"
						}
					]
				},
				"ev:step_3_summon_and_loot":{
					"sequence":[
						// DEBUG
						//{"run_command":{"command":["execute if entity @p[r=5,tag=debug_max] run function vein_miner/debug/msg_summon_and_loot"]}},
						// Loot
						{
							"filters":{"test":"bool_property","domain":"bit:has_silk_touch", "value":true},
							"trigger": "ev:step_4_loot"
						},
						// Summon - delay for any vine-looting to finish
						{"add":{"component_groups":["cg:delay_timer_summon"]}}
						// Rest handled in summon event						
					]
				},
				"ev:step_4_loot":{
					// Note: This is only called when silk touch is on
					"sequence":[
						{"trigger": "ev:step_4a_loot_adjacent_vines"},
						{
							"filters":{"test":"bool_property","domain":"bit:in_leaf", "value":true},
							"trigger": "ev:step_4b_loot_leaves"
						}
					]
				},
				"ev:step_4a_loot_adjacent_vines":{
					// Note: This is only called when silk touch is on
					"sequence":[
						{
							"{{#local_vine_list}}":{
								"run_command":{"command":[
									{
										"{{#squiggly_pos.filter(x => x.pos != 2)}}":
											"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:vine_minion {{one}}"
									}
								]}
							}
						}					
					]
				},
				"$ev:step_4b_loot_leaves":{
					// Note: This is only called when silk touch is on
					"sequence":[
						{
							"filters":{"test": "in_block","value": "minecraft:{{leaf_id >= 0 ? 'leaves' : leaf2_id >= 0 ? 'leaves2' : give_leaf == 1 ? wood_name + '_'+leaf_sfx : 'bedrock'}}"},
							"run_command":{"command":["loot spawn ~ ~ ~ loot \"{{settings.addon}}/tree_loot/{{wood_name}}_leaf_loot\""]}
						}
					]
				},
				// Called by Delay Timer
				"ev:step_5_summon_to_neighbors":{
					"sequence":[
						// Vertical, Either Leaves or Logs - Y
						{"trigger":"ev:step_6a_summon_vertical"},
						// Radius @ Zero
						{	
							"filters":{
								"all_of":[
									{"test":"bool_property","domain":"bit:in_log", "value":true},
									{"test":"int_property","domain":"int:my_radius","operator":"==","value":0}
								]
							},
							"trigger": "ev:step_6b_summon_log_horizontal_radius_zero"
						},
						// Radius One Plus
						{
							"filters":{"test":"int_property","domain":"int:my_radius","operator":">=","value":1},
							"trigger": "ev:step_6c_summon_horizontal_radius_one_plus"
						},
						// Done
						{"trigger": "ev:step_z_destroy_block_and_despawn"}
					]
				},
				"$ev:step_6a_summon_vertical":{
					"sequence":[
						//Vertical, Either Leaves or Logs - Y
						{	
							"{{#squiggly_pos.filter(x => x.pos == 2)}}"	:{	
								"run_command":{"command":[
									"execute if block {{p75}} minecraft:{{leaf_id >= 0 ? 'leaves' : leaf2_id >= 0 ? 'leaves2' : give_leaf == 1 ? wood_name + '_'+leaf_sfx : 'bedrock'}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									"execute if block {{p75}} minecraft:{{wood_name}}_{{log_sfx}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									"execute if block {{p75}} minecraft:stripped_{{wood_name}}_{{log_sfx}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									{
										"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":
											"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}"
									}
								]}
							}
						}			
					]
				},
				"$ev:step_6b_summon_log_radius_zero":{
					"sequence":[					
						//Logs	X/Z				
						{	
							"{{#squiggly_pos.filter(x => x.pos != 2)}}":{	
								"run_command":{"command":[
									"execute if block {{p75}} minecraft:{{wood_name}}_{{log_sfx}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									"execute if block {{p75}} minecraft:stripped_{{wood_name}}_{{log_sfx}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									{
										"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":
											"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}"
									}
								]}
							}
						}				
					]
				},
				"$ev:step_6c_summon_horizontal_radius_one_plus":{
					"sequence":[					
						//Logs	X/Z				
						{	
							"{{#squiggly_pos.filter(x => x.pos != 2 && radius_ptr > 0)}}":{	
								"run_command":{"command":[
									// Leaves
									"execute if block {{p75}} minecraft:{{leaf_id >= 0 ? 'leaves' : leaf2_id >= 0 ? 'leaves2' : give_leaf == 1 ? wood_name + '_'+leaf_sfx : 'bedrock'}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr-1}} {{one}}",
									// Logs
									"execute if block {{p75}} minecraft:{{wood_name}}_{{log_sfx}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									"execute if block {{p75}} minecraft:stripped_{{wood_name}}_{{log_sfx}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr}} {{one}}",
									// Other
									{
										"{{#related_loot.filter(x => x.related_wood_1 == wood_name || x.related_wood_2 == wood_name)}}":
											"execute if block {{p75}} minecraft:{{block_name}} run summon dw623:tree_minion_{{wood_name}}_{{radius_ptr-1}} {{one}}"
									}
								]}
							}
						}				
					]
				},
				"ev:step_z_destroy_block_and_despawn":{
					"sequence":[
						{
							"run_command":{"command":[
								// 1) if no tree chest, spawn one in
								"execute unless entity @e[r=48,family=tree_chest,family=hungry] run summon dw623:tree_chopper_chest ~ ~ ~ 0 0 ev:entity_spawned Tree-Loot",

								// 2) destroy the block I am in
								"fill ~ ~ ~  ~ ~ ~ air destroy"
							]}
						},
						// should despawn once in air - this is just in case
						// later test if this is needed at all - get rid of if not
						{"add":{"component_groups":["cg:despawn"]}}
					]
				}
			}
		}
	}
}
