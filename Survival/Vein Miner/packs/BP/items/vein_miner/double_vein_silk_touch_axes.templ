{
	"$extend": ["double_axe"],
	"$scope":{
		//Not Shared
		"local_leaf3":"{{global_log3.filter(x => x.leaf3_sfx > '')}}",		
		"local_leaf3_alt":"{{global_log3.filter(x => x.alt_give_leaf3 > '')}}"
		
	},
	"$files": {    
        "array": "axe_material_list.filter(x => x.level_id >= 3)",
        "fileName": "./axes/double_vein_silk_touch_axe_{{material}}.bp"
    },
	"$template":{
		"format_version": "1.16.100",
		"minecraft:item": {
			"description": {
				"identifier": "dw623:{{material}}_double_vein_silk_touch_axe"
			},
			"components": {
				//"tag:minecraft:is_axe": {}, //This takes away the on_use_on
				"minecraft:display_name": {"value": "{{Title(material)}} Double Vein Axe\n§d§oSilk Touch for Trees §7(Radius={{radius_max+1}})"},
				"minecraft:durability":{"damage_chance":{"min":0,"max":1},"max_durability":"{{=max_durability*4}}"},
				"minecraft:foil": true, //Will be glint in next version
				"minecraft:icon": {"texture": "{{material}}_double_vein_axe"},
				"minecraft:on_use_on": {"on_use_on": {"event": "ev:place_entity"}},
				"minecraft:digger": {					
					"destroy_speeds": [	
						//Log Chopped
						{"{{#global_wood_types}}":{"block":"minecraft:{{wood_name}}_{{log_sfx}}"		 ,"speed":"{{=wood_destroy_speed}}","on_dig":{"event":"ev:summon_for_{{wood_name}}_log"}}},
						{"{{#global_wood_types}}":{"block":"minecraft:stripped_{{wood_name}}_{{log_sfx}}","speed":"{{=wood_destroy_speed}}","on_dig":{"event":"ev:summon_for_{{wood_name}}_log"}}},
						//Leaf Chopped
						//May not be able to do the Group 1 and 2 unless can get digger to ID them each
						{"{{#local_leaf3}}":{"block":"minecraft:{{log3_name}}_{{log3_sfx}}","speed":"{{=wood_destroy_speed}}","on_dig":{"event":"ev:summon_for_{{log3_name}}_leaf"}}},
						{"{{#local_leaf3_alt}}":{"block":"minecraft:{{alt_give_leaf3}}","speed":"{{=wood_destroy_speed}}","on_dig":{"event":"ev:summon_for_{{log3_name}}_leaf"}}}
						
						//If this works, add leaves... but if silk touch be sure to loot the leaf destroyed
					]
				}
			},				
			"events":{	
				//right-click					
				"$ev:place_entity": {
					"sequence": [
						{"trigger":"ev:damage_20"},
						//{"condition":"q.has_block_state('old_leaf')","run_command":{"command":["say §aCondition old_leaf worked"]}},
						{
							"{{#this_or_any}}":{
								"condition":"{{condition}}",
								"run_command": {
									"command": [
										"tell @p{tag=debug] Mining {{toa}} Tree Type (r={{radius_max}})",
										"function {{settings.addon}}/trees/silk_touch_on_use_on_log_{{toa}}_type_r{{radius_max}}"
									]
								},
								"{{?toa == 'this'}}":{"trigger":"ev:place_entity_{{toa}}_type"}
							}
						}
					]
				},				
				"ev:place_entity_this_type": {
					"sequence": [						
						// Leaf Group 1 & 2
						/*
						{	Example - works too - just more categories
							"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":{"{{#global_log1}}": {
								"run_command": {"command": [
									"execute if block ~ ~ ~  minecraft:leaves [\"old_leaf_type\" = \"{{log1_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run title @p title {{realTitle(log1_name)}} Leaves Only",
									"execute if block ~ ~ ~  minecraft:leaves [\"old_leaf_type\" = \"{{log1_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{log1_name}}_{{radius_max}} ~ ~ ~ 0 0 ev:silk_touch_activate_leaf"										
								]}
							}}}
						}*/						
						{
							"{{#global_log1}}": {
								"run_command": {"command": [
										{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":[
											"execute if block ~ ~ ~  minecraft:leaves [\"old_leaf_type\" = \"{{log1_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run title @p title {{realTitle(log1_name)}} Leaves Only",
											"execute if block ~ ~ ~  minecraft:leaves [\"old_leaf_type\" = \"{{log1_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{log1_name}}_{{radius_max}} ~ ~ ~ 0 0 ev:silk_touch_activate_leaf"
										]
										}}
								]}
							}
						},
						{
							"{{#global_log2}}": {
								"run_command": {"command": [
										{"{{#leaf_persistent_bit}}":{"{{#leaf_update_bit}}":[
											"execute if block ~ ~ ~  minecraft:leaves [\"new_leaf_type\" = \"{{log2_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run title @p title {{realTitle(log2_name)}} Leaves Only",
											"execute if block ~ ~ ~  minecraft:leaves [\"new_leaf_type\" = \"{{log2_name}}\", \"persistent_bit\" = {{persistent_bit}}, \"update_bit\" = {{update_bit}}] run summon dw623:leaf_minion_{{log2_name}}_{{radius_max}} ~ ~ ~ 0 0 ev:silk_touch_activate_leaf"
										]
										}}
								]}
							}
						}					
					]
				},
				//Test Idea - if destroyed block and know name, if have position, can install summon in 6 places around it for that log type
				//Need to add is sneaking for ANY - use sequence and condition
				"{{#global_wood_types}}":{
					"ev:summon_for_{{wood_name}}_log":{
						//ctd:test_minion
						"run_command": {"command": [							
								"summon dw623:tree_minion_{{wood_name}}_{{radius_max}} ~ ~ ~ 0 0 ev:silk_touch_activate_log"
							]
							,"target":"block"
						}
					},
					"ev:summon_for_{{wood_name}}_leaf":{
						//ctd:test_minion
						"run_command": {"command": [							
								"summon dw623:leaf_minion_{{wood_name}}_{{radius_max}} ~ ~ ~ 0 0 ev:silk_touch_activate_leaf"
							]
							,"target":"block"
						}
					}
				}				
			}
		}
	}
}